settings set prompt lldb>
# Use dynamic types where possible
settings set target.prefer-dynamic-value run-target

# breakpoint shortcuts
# break on function/method/selector: b -n name
# break on C/C++ method: b -M method
# break on selector: b -S selector:here:
# break on address: b -a 0xfeedface
command alias b breakpoint set
command alias bd breakpoint disable
command alias be breakpoint enable
command alias bdel breakpoint delete
command alias bcommand breakpoint command add
command alias commands breakpoint command list
command alias uikit expr @import UIKit
command alias foundation expr @import Foundation
command alias appkit expr @import AppKit
command alias -- po expression -O -vfull --
# -A shows register names as 'argX' where appropriate to the ABI
command alias args register read -A

command alias mailsym target symbols add /Users/ant/Development/MailHub/debug/Mail.dwarf

# Add 'sniff_objc_exception_throw' command
command script import  ~/lldb/sniff_objc_exception_throw.py
command script import  ~/lldb/framestats.py
command script import  ~/lldb/info_sources.py
command script import  ~/lldb/print_args.py
command script import  ~/lldb/load_symbols.py
command script import  ~/lldb/formatters/MailSummaries.py
# Automatically continue for specified exception names, or class names.
# To use, add an action 'Debugger Command' to the general exception breakpoint, such as:
#    ignore_specified_objc_exceptions name:NSAccessibilityException className:NSSomeException
command script import  ~/lldb/ignore_specified_objc_exceptions.py
# Automatically continue for specified exception names, or class names.
# To use, add an action 'Debugger Command' to the general exception breakpoint, such as:
#    ignore_exception Security::UnixError
command script import  ~/lldb/ignore_exception.py
command script import  ~/lldb/injectfscript.py
#command script import  ~/lldb/formatters/qstring.py

# jump aliases
# jump 0xfeedface
command alias jump register write pc
command alias jmp register write pc
command alias j register write pc

settings set prompt "> "

# fix p/s
# p/s rsi
command alias p/s register read

# 'rd' command will print a recursive description of the view hierarchy
command regex rd 's/^[[:space:]]*$/po [[NSApp keyWindow] recursiveDescription]/' 's/^(.+)$/po [%1 recursiveDescription]/'

# 'dpo <variable>' - "dynamic po" -- print the dynamic type of an object
command regex dpo 's/^([ -z_]+)/frame variable %1 --dynamic-type no-run-target --show-types/'

# 'f <frame>' alias for 'frame select <frame>', 'f' alias for finish
command regex f 's/^([0-9]+)[[:space:]]*$/frame select %1/' 's/^([+-][0-9]+)[[:space:]]*$/frame select --relative=%1/' 's/^[[:space:]]*$/finish/'
