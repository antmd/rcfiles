

# act like GNU screen
unbind-key C-b
set -g prefix C-t
# act like vim
setw -g mode-keys vi

set-option -g history-limit 5000

############
# BINDINGS #
############

unbind-key p
unbind-key v
unbind-key s
unbind-key space

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key o kill-pane -a
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key p paste-buffer
bind-key \ choose-tree

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6- | sed 's/master/2.5/')"

# Copy mode - Vi like bindings

# tmux < 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key -t vi-copy Escape cancel; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; \
  bind -t vi-copy y copy-pipe 'to_clipboard'" \

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'to_clipboard'"


# Mouse support
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"


# if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

# Disable auto naming of tabs
set-option -g allow-rename off
set-window-option -g automatic-rename off
run-shell "tmux setenv -g DISABLE_AUTO_TITLE true"

#setting the delay between prefix and command
bind-key C-t last-window
# Ensure that we can send Ctrl-A to other apps
bind-key C-a send-prefix
# Reload the file with Prefix r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"
# splitting panes
bind-key v split-window -h
bind-key s split-window -v
# Quick pane selection
bind-key -r p select-window -t :-
bind-key -r space select-window -t :+
# Pane resizing
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10

bind-key = set-window-option synchronize-panes on
bind-key - set-window-option synchronize-panes off

# Layouts
bind-key C-q select-layout main-horizontal
bind-key C-w select-layout even-horizontal
bind-key C-e select-layout even-vertical
bind-key C-r select-layout main-vertical
bind-key C-y select-layout tiled

############
# SETTINGS #
############

# look good
set -g default-terminal "screen-256color"

# resize windows to smallest client only when active
setw -g aggressive-resize on
# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1
set -sg escape-time 0
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
# set the status line's colors
set -g status-fg white
set -g status-bg black
# set the color of the window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# set colors for the active window
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# Command / message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# Status line left side
set -g status-left-length 40
set -g status-left "#[fg=green]S:#S #[fg=yellow]W:#I #[fg=cyan]P:#P"
#set -g status-utf8 on
# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#{prefix_highlight} | #h | #[fg=cyan]%d %b %R"
# Update the status bar every sixty seconds
set -g status-interval 60
# Center the window list
set -g status-justify centre

# Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Load plugins if tmux version > 1.9
if-shell -b '[ "$(echo "$TMUX_VERSION > 1.9" | bc)" = 1 ]' \
    "set -g @plugin 'tmux-plugins/tpm'; \
    set -g @plugin 'tmux-plugins/vim-tmux-focus-events'; \
    set -g @plugin 'tmux-plugins/tmux-logging'; \
    set -g @plugin 'tmux-plugins/tmux-resurrect'; \
    set -g @plugin 'tmux-plugins/tmux-prefix-highlight'; \
    run '~/.tmux/plugins/tpm/tpm';"

bind m run "\
    tmux show-options -g | grep -q "mouse.*on"; \
    if [ \$? = 0 ]; \
    then  \
        toggle=off;  \
    else  \
        toggle=on;  \
    fi;  \
    tmux display-message \"mouse is now: \$toggle\";  \
    tmux set-option -w mouse \$toggle; \
    tmux set-option -g mouse \$toggle; \
    "
